@use 'sass:math';

@mixin hide-scrollbar {
  -ms-overflow-style: none;
  scrollbar-width: none;

  &::-webkit-scrollbar {
    display: none;
  }
}

@mixin horizontal-slider {
  position: relative;
  display: flex;
  overflow-x: auto;
  scroll-snap-type: x mandatory;
  @include hide-scrollbar;

  &.animating {
    scroll-snap-type: none;
  }

  .no-firefox & > * {
    flex-shrink: 0;
    scroll-snap-align: start;
  }
}


@mixin arrow {
  display: block;
  width: rem(10);
  height: rem(10);
  background-image: url(/svg/arrow.svg);
  background-position: top right;
  background-size: contain;
}

@mixin overlay-children {
  display: grid;
  grid-template-columns: 1fr;

  & > * {
    grid-column-start: 1;
    grid-row-start: 1;
  }
}

@mixin indent() {
  text-indent: var(--text-indent);
}
@mixin underline() {
  text-decoration: underline;
  text-decoration-thickness: .05em;
  text-underline-offset: .1em;
}
@mixin superscript() {
  sup{
    vertical-align: text-top;
  }
}

@mixin text-underline {
  @include tablet-portrait {
    text-decoration: underline;
    text-decoration-thickness: rem(1);
    text-underline-offset: rem(2);
  }

  @include not-tablet-portrait {
    text-decoration: underline;
    text-decoration-thickness: rem(2);
    text-underline-offset: rem(3);
  }
}

@mixin hover-underline-cta {
  @include tablet-portrait {
    text-decoration: underline;
    text-decoration-thickness: rem(1);
    text-underline-offset: rem(3);
  }

  @include not-tablet-portrait {
    &:hover {
      text-decoration: underline;
      text-decoration-thickness: rem(2);
      text-underline-offset: rem(6);
    }
  }
}

@mixin no-hover-underline-cta {
  @include tablet-portrait {
    text-decoration: underline;
    text-decoration-thickness: rem(1);
    text-underline-offset: rem(3);
  }

  @include not-tablet-portrait {
    text-decoration: underline;
    text-decoration-thickness: rem(2);
    text-underline-offset: rem(6);
  }
}


@mixin style($style) {
  composes: $style from '/styles/layout/composition.module.scss';
}

@mixin apply($style) {
  @extend #{'%' + $style};
}


@mixin ui($style) {
  composes: $style from '/styles/layout/ui.module.scss';
}

@mixin keepRatio($ratio: math.div(3,4)) {
  position: relative;

  & > * {
    @include fullscreen;
  }

  &::before {
    display: block;
    padding-bottom: math.div(1, $ratio) * 100%;
    content: '';
  }
}

@mixin background-image-retina($file, $type, $width, $height) {
  background-image: url($file + '.' + $type);
  background-repeat: no-repeat;
  background-size: $width $height;

  @media (min-device-pixel-ratio: 2), (resolution >= 144dpi) {
    & {
      background-image: url($file + '@2x.' + $type);
    }
  }
}

@mixin transition($properties :'visibility, opacity', $duration:.5s, $ease:$quad-ease-out, $delay:0s) {
  $value: '';
  $list: explode($properties, ',');

  @each $property in $list {
    @if (value != '') {
      $value: $value + ', ';
    }

    $value: $value+'#{$property} #{$duration} #{$ease} #{$delay}';
  }

  transition: #{$value};
}

@mixin on-line-text-no-wrap() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin ellipsis($lines-to-show, $line-height : 1em) {
  display: block; /* Fallback for non-webkit */
  display: -webkit-box;
  overflow: hidden;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $lines-to-show;
  text-overflow: ellipsis;
}

@mixin fullscreen( $position: absolute ) {
  position: $position;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

@mixin fullscreen-center() {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin fullscreen-cover() {
  position: absolute;
  top: 50%;
  left: 50%;
  width: auto;
  min-width: 100%;
  height: auto;
  min-height: 100%;
  transform: translate(-50%, -50%);
}

@mixin fullscreen-contain() {
  position: absolute;
  top: 50%;
  left: 50%;
  width: auto;
  max-width: 100%;
  height: auto;
  max-height: 100%;
  transform: translate(-50%, -50%);
}

@mixin vertical-align-children($target : '*') {
  .flexbox & {
    display: flex;
    align-items: center;
  }

  .no-flexbox & > #{$target}

 {
    position: absolute;
    top: 50%;
    left: 0%;
    transform: translateY(-50%);
  }
}

@mixin center-children($target : '*', $modernizrAddons:'') {
  #{$modernizrAddons}

.flexbox & {
    display: flex;
    align-items: center;
    justify-content: center;
    -moz-box-align: center;
  }

  #{$modernizrAddons}.no-flexbox & > #{$target}

 {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}

@mixin fade-transition($show : true, $selector : '&.show') {
  @include transition;

  @if ($show) {
    opacity: 0;
    visibility: hidden;
  } @else {
    opacity: 1;
    visibility: visible;
  }

  #{$selector}

 {
    @if ($show) {
      opacity: 1;
      visibility: visible;
    } @else {
      opacity: 0;
      visibility: hidden;
    }
  }
}

@mixin box-shadow($distance :5px, $opacity : .5) {
  box-shadow: 0 0 $distance rgba(0, 0, 0, $opacity);
}

@mixin text-shadow($distance :5px, $color : rgba(0, 0, 0, .5)) {
  text-shadow: 0 0 $distance $color;
}

@mixin filter-shadow($distance : 2px, $opacity : .3) {
  filter: drop-shadow(0 0 $distance rgba(0, 0, 0, $opacity));
}

@mixin css-parralax($translateZ, $perspective: 1px) {
  transform: translateZ($translateZ) scale(parralax-depth-correct($translateZ, $perspective));
}

@mixin justify-one-line() {
  text-align: justify;

  &::after {
    display: inline-block;
    width: 100%;
    content: '';
  }
}

@mixin mix-blend-mode() {
  @supports (mix-blend-mode: exclusion) {
    @content;
  }
}
